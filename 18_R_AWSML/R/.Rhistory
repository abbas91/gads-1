beer <- ts(df$production, freq=12)
stl(beer)
stl(beer, s.window='periodic')
plot(stl(beer, s.window='periodic'))
df <- read.csv('../data/monthly-beer-production-in-austr.csv')
beer <- ts(df$production)
res <- stl(beer, s.window='periodic')
plot(stl(beer, s.window='periodic'))
beer <- ts(df$production, freq=10)
res <- stl(beer, s.window='periodic')
plot(stl(beer, s.window='periodic'))
beer <- ts(df$production, freq=20)
res <- stl(beer, s.window='periodic')
plot(stl(beer, s.window='periodic'))
beer <- ts(df$production, freq=12)
res <- stl(beer, s.window='periodic')
plot(stl(beer, s.window='periodic'))
install.packages('xts')
periodicity(df$production)
?xts
library(xts)
?xts
periodicity(df$production)
periodicity(df)
?periodicity
periodicity(ts(df))
periodicity(ts(df$production))
zoo.ts <- zoo(rnorm(231),as.Date(13514:13744,origin="1970-01-01"))
periodicity(zoo.ts)
?HoltWinters
source('~/apps/gads/18_R_AWSML/R/timeseries_exploration.R')
install.packages("xts")
df <- read.csv('../data/monthly-beer-production-in-austr.csv')
beer <- ts(df$production, freq=12)
res <- stl(beer, s.window='periodic')
plot(stl(beer, s.window='periodic'))
# Find periodicity, why 12?
install.packages('xts')
library(xts)
periodicity(ts(df$production))
?HoltWinters
HoltWinters(beer)
hw_beer <-  HoltWinters(beer)
hw_beer
hw_beer$fitted
hw_beer$fitted[1:20]
hw_beer$fitted[1:20,]
hw_beer$fitted[1:10,]
plot(hw_beer)
plot(hw_beer$xhat)
hw_beer$xhat
hw_beer$level
hw_beer['level']
?HoltWinters
hw_beer$fitted[1:10,]
hw_beer$fitted[1:10,]$xhat
res <- hw_beer$fitted[1:10,]
res
res$xhat
colnames(res)
lines(hw_beer$fitted[1:10,], col='red')
plot(beer[1:200,])
lines(hw_beer$fitted[1:10,], col='red')
plot(beer[1:200,])
beer[1:200,]
beer
lines(hw_beer$fitted, col='red')
plot(beer)
lines(hw_beer$fitted, col='red')
hw_beer <-  HoltWinters(beer)
plot(beer)
lines(hw_beer$fitted, col='red')
lines(hw_beer$fitted, col='red')
plot(beer)
dim(beer)
plot(df$production)
lines(hw_beer$fitted, col='red')
plot(df$production, type = 'l')
lines(hw_beer$fitted, col='red')
len(hw_beer$fitted)
plot(hw_beer)
beer.hw <-  HoltWinters(beer)
beer.hw$fitted[1:10,]
plot(beer.hw)
predict(beer.hw, n.ahead=12)
beer
plot(beer)
lines(predict(beer.hw, n.ahead=12), col='blue')
plot(beer)
lines(predict(beer.hw, n.ahead=48), col='blue')
plot(beer)
plot(beer, xlim=c(1956, 1999)
plot(beer, xlim=c(1956, 1999))
lines(predict(beer.hw, n.ahead=48), col='blue')
beer <- ts(df, freq=12)
# Decompose
res <- stl(beer, s.window='periodic')
plot(stl(beer, s.window='periodic'))
beer <- ts(df$production, freq=12)
# Decompose
res <- stl(beer, s.window='periodic')
plot(stl(beer, s.window='periodic'))
# Find periodicity, Yearly means 12
install.packages('xts')
periodicity(ts(df$production))
beer.hw <-  HoltWinters(beer)
beer.hw$fitted[1:10,]
plot(beer.hw)
predict(beer.hw, n.ahead=12)
plot(beer, xlim=c(1956, 1999))
lines(predict(beer.hw, n.ahead=48), col='blue')
plot(beer)
beer
plot(beer, xlim=c(1, 35))
lines(predict(beer.hw, n.ahead=48), col='blue')
plot(beer, xlim=c(1, 50))
lines(predict(beer.hw, n.ahead=48), col='blue')
?arima.sim
sim.ar <- arima.sim(ar=c(0.4, 0.4), n=1000)
sim.ma <- arima.sim(1000, list(ma=c(0.6, -0.4)))
sim.ma <- arima.sim(list(ma=c(0.6, -0.4)), n = 1000)
sim.ar <- arima.sim(list(ar=c(0.4, 0.4)), n = 1000 )
# Simulate an MA(2) with coeffs [0.6, -0.4]
sim.ma <- arima.sim(list(ma=c(0.6, -0.4)), n = 1000)
par(mfrow=c(2,2))
acf(sim.ar, main="ACF of AR(2)")
acf(sim.ma, main="ACF of MA(2)")
pacf(sim.ar, main="PACF of AR(2)")
pacf(sim.ma, main="PACF of MA(2)")
sim.ar <- arima.sim(list(ar=c(0.4, 0.4, 0.4)), n = 1000 )
# Simulate an MA(2) with coeffs [0.6, -0.4]
sim.ma <- arima.sim(list(ma=c(0.6, 0.4)), n = 1000)
# 2 by 2 plots of ACF and PACF
par(mfrow=c(2,2))
acf(sim.ar, main="ACF of AR(2)")
acf(sim.ma, main="ACF of MA(2)")
# PACF
pacf(sim.ar, main="PACF of AR(2)")
sim.ar <- arima.sim(list(ar=c(0.3, 0.3, 0.3)), n = 1000 )
# Simulate an MA(2) with coeffs [0.6, -0.4]
sim.ma <- arima.sim(list(ma=c(0.6, 0.4)), n = 1000)
# 2 by 2 plots of ACF and PACF
par(mfrow=c(2,2))
acf(sim.ar, main="ACF of AR(2)")
acf(sim.ma, main="ACF of MA(2)")
# PACF
pacf(sim.ar, main="PACF of AR(2)")
pacf(sim.ma, main="PACF of MA(2)")
sim.ma <- arima.sim(list(ma=c(0.3, 0.3, 0.3)), n = 1000)
# 2 by 2 plots of ACF and PACF
par(mfrow=c(2,2))
acf(sim.ar, main="ACF of AR(2)")
acf(sim.ma, main="ACF of MA(2)")
# PACF
pacf(sim.ar, main="PACF of AR(2)")
pacf(sim.ma, main="PACF of MA(2)")
sim.ar <- arima.sim(list(ar=c(0.2, 0.2, 0.2, 0.2)), n = 1000 )
# Simulate an MA(2) with coeffs [0.6, -0.4]
sim.ma <- arima.sim(list(ma=c(0.3, 0.3, 0.3)), n = 1000)
# 2 by 2 plots of ACF and PACF
par(mfrow=c(2,2))
acf(sim.ar, main="ACF of AR(2)")
acf(sim.ma, main="ACF of MA(2)")
# PACF
pacf(sim.ar, main="PACF of AR(2)")
pacf(sim.ma, main="PACF of MA(2)")
data(LakeHuron)
plot(LakeHuron)
par(mfrow=c(1,1))
plot(LakeHuron)
LakeHuron
par(mfrow=c(1,1))
par(mfrow=c(1,2))
acf(LakeHuron, main="ACF of MA(2)")
pacf(LakeHuron, main="PACF of AR(2)")
par(mfrow=c(2,1))
acf(LakeHuron, main="ACF of MA(2)")
pacf(LakeHuron, main="PACF of AR(2)")
acf(LakeHuron, main="ACF of LakeHuron")
pacf(LakeHuron, main="PACF of LakeHuron")
fit <- arima(LakeHuron, order = c(1,0,1))
fit
plot(fit$fitted)
fit$fitted
fitted(fit)
fit$residuals
plot(fit$residuals)
par(mfrow=c(1,1))
plot(fit$residuals)
plot(fit$residuals, main="Residuals of ARIMA (1,0,1)")
tsdiag(fit)
tsdiag(fit)
Box.test(fit$residuals, lag=1)
?Box.test
fit <- arima(LakeHuron, order = c(1,0,1))
LH.pred <- predict(fit, n.ahead=8)
LH.pred
LakeHuron
plot(LakeHuron, xlim=c(1875, 1980))
plot(LakeHuron, xlim=c(1875, 1980))
lines(LH.pred$pred, col="red"  )
plot(LakeHuron, xlim=c(1875, 1980))
lines(LH.pred$pred, col="red"  )
lines(LH.pred$pred + 2* LH.pred$se , col="red", lty=3  )
lines(LH.pred$pred - 2* LH.pred$se , col="red", lty=3  )
?LH.se
getwd()
installed.packages()
?tcltk
??tcltk
?stm
??stm
getwd()
clear()
getwd()
hello
'''
hello
'''
setwd('/Users/aperrier')
getwd()
setwd('apps/gads/18_R_AWSML/')
getwd()
setwd('R')
getwd()
installed.packages()
?forecast
??forecast
c(2,2)
c(2,2, 3,45,5,6)
?c
?getwd()
getwd()
True
true
c('a',2,3,4,'heloo')
c('a',2,3,4,'heloo', getwd())
a <- c(1,2,3,4,5)
a
v <- c(apple = 1, banana = 2, "kiwi fruit" = 3, 4)
v
df <- read.csv('../data/iris.csv')
?read
?read.csv
dim(df)
head(df)
colnames(df)
summary(df)
?head
head(df, n = 23)
dim(df)
head(df)
colnames(df)
summary(df)
plot(df)
hist(df$sepal_length)
plot(df)
hist(df$sepal_length)
boxplot(df$sepal_width)
plot(df$sepal_length, df$petal_width)
?hist
par(mar = rep(2, 4))
hist(df$sepal_length)
?par
par(mfrow=c(1,1))
hist(df$sepal_length)
hist(df$sepal_length)
boxplot(df$sepal_length)
plot(df$sepal_length, df$petal_width)
df$sepal_length
df['sepal_length']
qqnorm(df$sepal_length)
qqline(df$sepal_length)
par(mfrow=c(1,1))
qqline(df$sepal_length)
qqnorm(df$sepal_length)
qqline(df$sepal_length)
iris$Species
iris$target[iris$Species == 'setosa'] <- 1
iris$target
iris$target2[iris$Species == 'setosa'] <- 1
iris$target
iris$target2
iris$target
fit <- lm(target ~ Sepal.Length + Sepal.Width + Petal.Length + Petal.Width, data = iris )
fit
coefficients(fit)
summary(fit)
Petal.Width^2
isir.Petal.Width^2
iris.Petal.Width^2
iris.petal_width
iris.head()
iris
head(iris)
iris$Sepal.Length
iris$Sepal.Length^2
fit <- lm(target ~ Sepal.Length + Sepal.Width + Petal.Length + Petal.Width+ Sepal.Length^2, data = iris )
coefficients(fit)
summary(fit)
iris
iris
ls()
tui <- read.csv('../data/FSE-TUI1_X.csv')
plot(tui)
iris
tui
tui <- read.csv('../data/FSE-TUI1_X.csv')
par(mfrow=c(1,1))
colnames(tui)
head(tui)
plot(tui$Close, type='l', main='TUI Close', lwd=1, col='red', ylab='closing')
plot(tui$Close, type='l', main='TUI Close', lwd=2, col='red', ylab='closing')
plot(tui$Close, type='l', main='TUI Close', lwd=2, col='red', ylab='closing')
plot(tui$Close, type='p', main='TUI Close', lwd=2, col='red', ylab='closing')
plot(tui$Close, type='p', main='TUI Close', lwd=1, col='red', ylab='closing')
plot(log(tui$Close), type='l', main='TUI Close', lwd=1, col='red', ylab='closing')
diff(log(tui$Clo
head(diff(tui$Close))
head(tui$Close)
?diff
diff(tui$Close, , lag = 5)
head(diff(tui$Close, , lag = 5))
hist( diff(log(tui$Close)), breaks = 50, prob = T)
hist( diff(log(tui$Close)), breaks = 50, prob = T)
lines(density(diff(log(tui$Close))))
head(tui$Close)
?density
hist( diff(log(tui$Close)), breaks = 50, prob = T )
lines(density(diff(log(tui$Close))))
max(density(diff(log(tui$Close))))
hist( diff(log(tui$Close)), breaks = 50, prob = T , ylim(0, 50))
hist( diff(log(tui$Close)), breaks = 50, prob = T , ylim= c(0, 50))
hist( diff(log(tui$Close)), breaks = 50, prob = T , ylim= c(0, 35))
lines(density(diff(log(tui$Close))))
data <- diff(log(tui$Close))
hist( data, breaks = 50, prob = T)
lines(density(data), col='red', lwd = 2)
hist( data, breaks = 50, prob = T, ylim = c(0,35))
lines(density(data), col='red', lwd = 2)
mu    <- mean(data)
mu
sigma <- sd(data)
sigma
x <- seq(-0.2,0.2, length=100)
y <- dnorm(x,mu,sigma)
lines(x,y,lwd=2, col='blue')
qqnorm(data)
abline(0,1)
abline(-2,2)
hist( data, breaks = 50, prob = T, ylim = c(0,35))
lines(density(data), col='red', lwd = 2)
mu    <- mean(data)
sigma <- sd(data)
# normal distribution
x <- seq(-0.2,0.2, length=100)
y <- dnorm(x,mu,sigma)
lines(x,y,lwd=2, col='blue')
?ks.test
ks.test(data, 'pnorm', mu, sigma)
shapiro.test(data)
?shapiro.test
data <- tui$Close[1000:1500]
data
plot(data)
plot(data, type='l')
tui
head(tui)
dim(tui)
tui.description('this is the description of the dataframe')
tui.description <- ('this is the description of the dataframe')
class(tui)
class(tui.description)
?rep
?filter
tui.5  <- filter(data,filter = rep(1/5,5)  )
tui.25 <- filter(data,filter = rep(1/25,25))
tui.81 <- filter(data,filter = rep(1/81,81))
plot(data, type='l')
lines(tui.5, col='red', lwd=2)
lines(tui.25, col='blue', lwd=2)
lines(tui.81, col='green', lwd=2)
plot(data, type='n')
points(data, pch=16, cex=0.5)
lines(tui.5, col='red', lwd=2)
lines(tui.25, col='blue', lwd=2)
lines(tui.81, col='green', lwd=2)
tui.5
tui.10  <- filter(data,filter = rep(1/10,10)  )
tui.10
df <- read.csv('../data/monthly-beer-production-in-austr.csv')
head(df)
dim(df)
?ts
type(beer)
class(beer)
beer <- ts(df$production, freq=12)
class(beer)
res <- stl(beer, s.window='periodic')
plot(stl(beer, s.window='periodic'))
periodicity(ts(df$production))
?HoltWinters
beer.hw <-  HoltWinters(beer)
beer.hw$fitted[1:10,]
plot(beer.hw)
predict(beer.hw, n.ahead=12)
plot(beer, xlim=c(1, 50))
lines(predict(beer.hw, n.ahead=48), col='blue')
plot(beer, xlim=c(1, 50))
lines(predict(beer.hw, n.ahead=96), col='blue')
predict(beer.hw, n.ahead=48)
sim.ar <- arima.sim( list( ar=c(0.4, 0.4)), n = 1000 )
par(mfrow=c(1,2))
acf(sim.ar, main="ACF of AR(2)")
par(mfrow=c(2,1))
acf(sim.ar, main="ACF of AR(2)")
pacf(sim.ar, main="ACF of AR(2)")
sim.ar <- arima.sim( list( ar=c(0.2,0.3, 0.4)), n = 1000 )
par(mfrow=c(2,1))
acf(sim.ar, main="ACF of AR(3)")
pacf(sim.ar, main="ACF of AR(3)")
?arima.sim
sim.ma <- arima.sim(list( ma=c(0.6, -0.4)  ), n = 1000)
# 2 by 2 plots of ACF and PACF
par(mfrow=c(2,2))
acf(sim.ar, main="ACF of AR(2)")
acf(sim.ma, main="ACF of MA(2)")
par(mfrow=c(2,1))
acf(sim.ar, main="ACF of AR(2)")
acf(sim.ma, main="ACF of MA(2)")
par(mfrow=c(2,1))
acf(sim.ma, main="ACF of MA(2)")
pacf(sim.ma, main="ACF of MA(2)")
par(mfrow=c(2,1))
acf(sim.ma, main="ACF of MA(2)")
pacf(sim.ma, main="PACF of MA(2)")
sim.ma <- arima.sim(list( ma=c(0.6, -0.4, 0.2)  ), n = 1000)
# 2 by 2 plots of ACF and PACF
par(mfrow=c(2,1))
acf(sim.ma, main="ACF of MA(2)")
pacf(sim.ma, main="PACF of MA(2)")
?sim.ma
?arime.sim
?arima.sim
beer
par(mfrow=c(2,1))
acf(beer, main='autocorrelation of beer ts')
pacf(beer, main='partial autocorrelation of beer ts')
data(LakeHuron)
par(mfrow=c(1,1))
plot(LakeHuron)
?data
data
data()
par(mfrow=c(2,1))
acf(LakeHuron, main="ACF of LakeHuron")
pacf(LakeHuron, main="PACF of LakeHuron")
fit <- arima(LakeHuron, order = c(1,0,1))
fit
par(mfrow=c(1,1))
plot(fit$residuals, main="Residuals of ARIMA (1,0,1)")
tsdiag(fit)
fit <- arima(LakeHuron, order = c(1,0,0))
fit
par(mfrow=c(1,1))
plot(fit$residuals, main="Residuals of ARIMA (1,0,1)")
plot(fit$residuals, main="Residuals of ARIMA (1,0,0)")
# Are the residuals random or is there a trace of non randomness left?
tsdiag(fit)
fit.ar1 <- arima(LakeHuron, order = c(1,0,0))
fit.ar1
par(mfrow=c(1,1))
tsdiag(fit.ar1)
fit.arma1 <- arima(LakeHuron, order = c(1,0,0))
fit.arma1
tsdiag(fit.arma1)
tsdiag(fit.ar1)
fit.ar1 <- arima(LakeHuron, order = c(1,0,1))
fit.ar1
fit.ar1 <- arima(LakeHuron, order = c(1,0,0))
fit.ar1
par(mfrow=c(1,1))
tsdiag(fit.ar1)
fit.arma1 <- arima(LakeHuron, order = c(0,0,1))
fit.arma1 <- arima(LakeHuron, order = c(1,0,1))
fit.arma1
tsdiag(fit.arma1)
fit.arma1 <- arima(LakeHuron, order = c(2,0,2) )
fit.arma1
par(mfrow=c(1,1))
plot(fit.arma1$residuals, main="Residuals of ARIMA (1,0,1)")
# Are the residuals random or is there a trace of non randomness left?
tsdiag(fit.arma1)
Box.test(fit$residuals, lag=1)
?Box.test
Box.test(fit.ar1$residuals, lag=1)
Box.test(fit.arma1$residuals, lag=1)
fit.arma1 <- arima(LakeHuron, order = c(0,0,1) )
fit.ma1 <- arima(LakeHuron, order = c(0,0,1) )
Box.test(fit.ma1$residuals, lag=1)
fit <- arima(LakeHuron, order = c(1,0,1))
LH.pred <- predict(fit, n.ahead=8)
LH.pred
LakeHuron
LH.pred
plot(LakeHuron, xlim=c(1875, 1980))
lines(LH.pred$pred, col="red"  )
lines(LH.pred$pred + 2* LH.pred$se , col="red", lty=3  )
lines(LH.pred$pred - 2* LH.pred$se , col="red", lty=3  )
LH.pred$se
LH.pred
?predict
